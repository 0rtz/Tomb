February 2014 - 1.5.2

	Removed automatic guessing of key file besides tomb to encourage
	users to keep tomb and key separated, but also to simplify the
	code in key retrieval and avoid a bug occurring in the previous
	version.

February 2014 - 1.5.1

	Fix to stdin piping of keys, which were not correctly processed
	nor were deleted from volatile memory (tmpfs). Version is now
	updated accordingly.

January 2014 - 1.5
	Minor bugfixes to documentation, error handling, support for
	multiple and encrypted swap partitions and qr code engraving.
	This release also includes some minor code refactoring of
	load_key() and loop mount checks. Also the tray app is updated
	to gtk-3 and works simply with a tomb name as argument.
	Documentation was updated accordingly.

June 2013 - 1.4

	This release fixes an important bug affecting Tomb 1.3.* which
	breaks backward compatibility with older tombs and invalidates
	keys created using 1.3 or 1.3.1. For more information about it
	read the file KNOWN_BUGS.  New features are also included:
	indexing and search of file contents, engraving of keys into paper
	printable QRCodes for backup purposes and improvements in key
	encryption. A setkey command is added to change the key file that
	is locking a Tomb. This release restores backward compatibility
	with tombs created before the 1.3 release series.

June 2013 - 1.3.1 (DEPRECATED USAGE, see 1.4 and KNOWN_BUGS)

	Major bugfixes following the recent refactoring. This release
	fixes various advanced commands as search/index, KDF key
	protection against dictionary attacks and steganographic hiding of
	keys. It provides compatibility across GnuPG 1.4.11 and .12 which
	broke the decoding of keys. Usage of commandline option is made
	consistent and full paths are honored. A new test suite is
	included and documentation is updated accordingly.

May 2013 - 1.3 (DEPRECATED USAGE, see 1.4 and KNOWN_BUGS)

	A refactoring of Tomb's main script internals was made, including
	a new messaging system, machine parsable output, cleaner code and
	updated compatibility to Debian 7. A new search feature lets users
	index and run fast filename searches in their open tombs. Creation
	of tombs is broken out in three steps (dig, forge and lock).
	Source distribution includes experimental add-ons for a python
	GUI, KDF key encryption and a key "undertaker". Documentation was
	updated.


Nov 2011 - 1.2

	Includes an Important fix to password parsing for spaces and
	extended chars, plus a new 'passwd' command to change a key's
	password. Tomb now checks for swap to avoid its usage (see SWAP
	section in manpage) and warns the user when the tomb is almost
	full.

May 2011 - 1.1

	Fixes to mime types, icons and desktop integration. A new 'list'
	command provides an overview on all tombs currently open. Now a
	tomb cannot be mounted multiple times, the message console has
	colors and better messages. Different mount options (like
	read-only) can also be specified by hand on the commandline.

March 2011 - 1.0

	Clean and stable. Now passwords are handled exclusively using
	pinentry. Also support for steganography of keys (bury and exhume)
	was added to the commandline. Commandline and desktop operations
	are well separated so that tomb can be used via remote terminal. A
	new command 'slam' immediately closes a tomb killing all processes
	that keep it busy.

February 2011 - 0.9.2

	The tomb-open wizard now correctly guides you through the creation
	of new tombs and helps when saving the keys on external USB
	storage devices. The status tray now reliably closes its tomb.

February 2011 - 0.9.1

	Sourcecode cleanup, debugging and testing.
	Integrated some feedback after filing Debian's ITP and RFS.

January 2011 - 0.9

	Tomb is now a desktop application following freedesktop standards:
	it provides a status tray and integrates with file managers.  The
	main program has been thoroughly tested and many bugs were fixed.

August 2010

	The first usable version of Tomb goes public among hacker friends

During the year 2009

	Tomb has been extensively tested, perfectioned and documented
	after being used by its author

Sometime in 2007

	mknest was refactored to work on the Debian distribution and since
	then renamed to Tomb. dyne:bolic specific dependencies where
	removed, keeping Zsh as the shell script it is written with.

Back in 2005

	The "nesting" feature of dyne:bolic GNU/Linux lets users encrypt
	their home in a file, using a shell script and a graphical
	interface called Taschino.

	Taschino included a shell script wrapping cryptsetup to encrypt
	loopback mounted partitions with the algo AES-256 (cbc-essiv
	mode): this script was called 'mkNest' and its the ancestor of
	Tomb.
